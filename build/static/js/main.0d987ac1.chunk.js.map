{"version":3,"sources":["getUrl.js","status.js","Context.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["a","fetch","response","json","commits","Status","useState","statusName","setStatus","inputStatus","setInputStatus","className","href","onClick","NewStatus","line","type","onChange","item","target","value","defaultValue","memo","Context","React","createContext","setInputForm","setForm","state","setValidForm","form","setRecentСhanges","request","pass","length","error","twoPass","mail","test","getUrl","city","check","console","log","recentСhanges","d","Date","year","getFullYear","date","getDate","monthName","getMonth","hours","getHours","min","getMinutes","sec","getSeconds","Form","useContext","cityes","onSubmit","e","preventDefault","map","val","key","checked","App","setCityes","useEffect","getCities","then","data","sort","filter","population","maxIndex","reduce","acc","curr","i","Number","unshift","splice","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d987ac1.chunk.js","sourcesContent":["\r\nexport  async function  getCities(){\r\n\r\n    let url = \"http://localhost:3000/cities.json\";\r\n    let response = await fetch(url);\r\n    \r\n    let commits = await response.json();  \r\n    return commits;\r\n}\r\n"," import {Fragment,useState, memo} from 'react'\r\n const Status = ()=>{\r\n    const [statusName, setStatus] = useState(\"Прежде чем действовать, надо понять\")\r\n    const [inputStatus, setInputStatus] = useState(false);\r\n    return(\r\n        <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <span className=\"HeadFirstWord\">Здравствуйте,</span>\r\n                        <span className=\"HeadUserName\">Человек №3596941</span>\r\n                    </div>\r\n\r\n                    <div className=\"col-5 \">\r\n                    <a href=\"#\" onClick={() => { setInputStatus(!inputStatus) }} className=\"newStatus\">Сменить статус</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"formLinePanel \">\r\n                        <label className=\"formLabel\"></label>\r\n                        <div className=\"arrow\">\r\n                            {inputStatus ? <NewStatus\r\n                            statusName={statusName}\r\n                            setInputStatus={setInputStatus}\r\n                            setStatus={setStatus}\r\n                            /> : statusName}\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n  </Fragment>\r\n    \r\n    );\r\n\r\n}\r\nconst NewStatus = ({ statusName, setStatus, setInputStatus }) => {\r\n    let line = statusName;\r\n    const data = (item) => {\r\n      line = item.target.value;\r\n    }\r\n    return (\r\n      <>\r\n        <input className=\"formInput\" type=\"text\" onChange={data} defaultValue={statusName} />\r\n        <button className=\"formBtnStatus\" onClick={() => {\r\n          setStatus(line)\r\n          setInputStatus(false)\r\n        }}>Сохранить</button>\r\n      </>\r\n    );\r\n  }\r\n\r\n export default memo(Status);","import React from 'react'\r\n\r\nexport const Context = React.createContext()","import { useContext,useState } from \"react\";\r\nimport { Context } from \"./Context\";\r\nconst setInputForm = (setForm,value) => {\r\n    \r\n    setForm((state) => ({\r\n          ...state,\r\n          ...value\r\n        })\r\n      )\r\n\r\n}\r\nconst Form = () => {\r\n    const {form, setForm,cityes } = useContext(Context)\r\n    console.log(form)\r\n    const [recentСhanges,setRecentСhanges] = useState(\"последние изменения 15 мая 2012 в 14:55:17\")\r\n    return (\r\n        <form onSubmit={(e)=>e.preventDefault()}>\r\n            <div className=\"botLine formLine\" >\r\n                <label className=\"formLabel\">\r\n                    Ваш город\r\n                </label>\r\n                <select className=\"formInput\" onChange={(item) => {\r\n                    setInputForm(setForm, {city:{ value: item.target.value}} )\r\n                }\r\n                }>\r\n                    {cityes.map((val, key) => (\r\n                        <option key={key} value={val.city}> {val.city} </option>\r\n                    ))\r\n                    }\r\n                </select>\r\n            </div>\r\n            <div className=\"formLine\">\r\n                <label className=\"formLabel\">Пароль</label>\r\n                <input className={form.pass.error ? \"formInput error\" : \"formInput\"} type=\"password\" onChange={(item) => {\r\n                    setInputForm(setForm, { pass:{ value: item.target.value, error: form.pass.error }})\r\n                    \r\n                }\r\n                } />\r\n                <label className=\"errorText\">{form.pass.error}</label>\r\n                <span className=\"formHint\">Ваш новый пароль должен содержать не менее 5 символов.</span>\r\n            </div>\r\n\r\n            <div className=\"formLine botLine br-top\" >\r\n                <label className=\"formLabel\">Пароль еще раз</label>\r\n                <input className={form.twoPass.error ? \"formInput error\" : \"formInput\"} type=\"password\" onChange={(item) => {\r\n                   setInputForm(setForm, {twoPass:{ value: item.target.value, error: form.twoPass.error }} )\r\n                    \r\n                }\r\n                } />\r\n                <label className=\"errorText\">{form.twoPass.error}</label>\r\n                <span className=\"formHint\">Повторите пароль, пожалуйста, это обезопасит вас с нами на случай ошибки.</span>\r\n            </div>\r\n\r\n            <div className=\"formLine \" >\r\n                <label className=\"formLabel\"> Электронная почта</label>\r\n\r\n                <input className={form.mail.error ? \"formInput error\" : \"formInput\"} type=\"email\" onChange={(item) => {\r\n                    setInputForm(setForm, {mail:{ value: item.target.value, error: form.mail.error }})\r\n                     \r\n                }\r\n                } />\r\n                <label className=\"errorText\">{form.mail.error}</label>\r\n                <span className=\"formHint\">Можно изменить адрес, указанный при регистрации. </span>\r\n            </div>\r\n            <br />\r\n            <div className=\"formLine\" >\r\n\r\n                <label className=\"formLabel\">  Я согласен</label>\r\n\r\n                <div className=\"\">\r\n                    <input type=\"checkbox\" onChange={(item) => {\r\n                        setInputForm(setForm, {check:item.target.checked})\r\n                    }\r\n                    } />\r\n                    <span className=\"formAcceptIinformation\">принимать актуальную информацию на емейл</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <br />\r\n            <div className=\"row \" >\r\n                <div className=\"col-3\">\r\n                    <label className=\"formLabel\">  </label>\r\n                </div>\r\n                <div className=\"col-4 d-flex\">\r\n                    <button className=\"formBtn\" onClick={() => setValidForm(form, setForm, setRecentСhanges)}>\r\n                        Изменить\r\n                    </button>\r\n                    <span className=\"recentСhanges\">{recentСhanges}</span>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </form>)\r\n}\r\nconst setValidForm = (form, setForm,setRecentСhanges) => {\r\n    let request = true\r\n    if (form.pass.value.length < 5) {\r\n      request = false\r\n      setForm((state) => ({ ...state, pass: { value: state.pass.value, error: \"Используйте не менее 5 символов\" } })\r\n      )\r\n    }\r\n    else { setForm((state) => ({ ...state, pass: { value: state.pass.value, error: \"\" } })) }\r\n  \r\n    if (form.pass.value !== form.twoPass.value) {\r\n      request = false\r\n      setForm((state) => (\r\n        { ...state, twoPass: { value: state.twoPass.value, error: \"Пароли не совпадают\" } }\r\n      ))\r\n    }\r\n    else {\r\n      setForm((state) => ({ ...state, twoPass: { value: state.twoPass.value, error: \"\" } }))\r\n    }\r\n  \r\n    if(form.mail.value!=\"\"){\r\n      if (!/^.-*?@\\w+\\.\\w{2,5}$/.test(form.mail.value)) {\r\n  \r\n        setForm((state) => ({ ...state, mail: { value: state.mail.value, error: \"\" } }))\r\n      }\r\n      else {\r\n        request = false\r\n        setForm((state) => ({ ...state, mail: { value: state.mail.value, error: \"Неверный E-mail\" } }))\r\n      }\r\n    }else{\r\n        request = false\r\n        setForm((state) => ({ ...state, mail: { value: state.mail.value, error: \"Неверный E-mail\" } }))\r\n    }\r\n      \r\n    const getUrl = {\r\n      city:form.city.value,\r\n      pass:form.pass.value,\r\n      mail:form.mail.value,\r\n      check:form.check\r\n    }\r\n  \r\n    if (request) {\r\n      console.log(\"Отправка формы\", getUrl)\r\n      setRecentСhanges((state)=>recentСhanges())\r\n    }\r\n     \r\n  }\r\n\r\n  const recentСhanges=()=>{\r\n    const months = [\r\n      'января',\r\n      'февраля',\r\n      'марта',\r\n      'апреля',\r\n      'мая',\r\n      'июня',\r\n      'июля',\r\n      'августа',\r\n      'сентября',\r\n      'октября',\r\n      'ноября',\r\n      'декабря'\r\n    ]\r\n    const d = new Date();\r\n    const year = d.getFullYear();\r\n    const date = d.getDate()  ;\r\n    const monthIndex = d.getMonth();\r\n    const monthName = months[monthIndex]\r\n    const hours = d.getHours();\r\n    const min = d.getMinutes();\r\n    const sec = d.getSeconds();\r\n    return `последние изменения ${date} ${monthName} ${year} в ${hours}:${min}:${sec}`  \r\n  }\r\nexport default Form;","\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { getCities } from './getUrl';\nimport Status from './status'\nimport {Context} from './Context'\nimport Form from './Form'\nfunction App() {\n \n  const [cityes, setCityes] = useState([])\n  const [form, setForm] = useState(\n    {\n      city: { value: \"\" },\n      pass: { value: \"\", error: false },\n      twoPass: { value: \"\", error: false },\n      mail: { value: \"\", error: false },\n      check: false\n    }\n  )\n  useEffect(() => {\n    getCities().then((json) => {\n      let data = json.sort().filter((item => item.population > 50000));\n      let maxIndex = data.reduce((acc, curr, i) => Number(data[acc].population) > Number(curr.population) ? acc : i, 0);\n      data.unshift(...data.splice(maxIndex, 1));\n      setCityes(data)\n      setForm({ ...form, city: { value: data[0].city } })\n    });\n     \n  }, [])\n \n   if ( cityes.length=== 0) {\n    return (<h1>Загрузка...</h1>)\n  } \n \n    return (\n      <Context.Provider value={{form,setForm,cityes}}>\n        <div className=\"container containerNew\">\n          <Status />\n          <Form />\n        </div>\n      </Context.Provider>\n      \n\n    );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}